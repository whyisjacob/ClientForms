<script>
	var firstReadingPicker;
	var finalReadingPicker;
	var firstReadingPickerClose;
	var finalReadingPickerClose;

	$(document).ready(function () {
		$("#ROW_Presenter").hide();
		$("#ROW_CEQAVals").hide();
		$("#ROW_EnvironmentalDetermination").hide();
		$("textarea").attr('rows', '5');
		$('#ordinanceSection').hide();

		//SET THE FIRST NUMBER IN BACKUPDOCUMENTATION NUMBERED LIST
		$("#AttachedExhibits").val("1. ");
		$("#Amounts").val("$");

		$('[data-toggle="tooltip"]').tooltip();
		requireFields()
		populateDept();

		//*******************************ADDS KEYDOWN TO AttachedExhibits SO WHEN THE ENTER BUTTON IS PRESSED IT ADDS ANOTHER NUMBER TO THE NUMBERED LIST AUTOMATICALLY****************************************
		$("#AttachedExhibits").keydown(function (event) {
			if (event.which == 13) {
				event.preventDefault();

				var bDoc = $("#AttachedExhibits").val();
				var lines = bDoc.split(/\r|\r\n|\n/);
				var count = lines.length
				count = count + 1;

				var press = jQuery.Event("keydown");
				press.ctrlKey = true;
				press.which = 13;

				bDoc = bDoc + String.fromCharCode(press.which) + count + ". ";

				$("#AttachedExhibits").val(bDoc);
			}
		})

		$("#Amounts").keydown(function (event) {
			if (event.which == 13) {
				event.preventDefault();

				var bDoc = $("#Amounts").val();
				var lines = bDoc.split(/\r|\r\n|\n/);
				var count = lines.length


				var press = jQuery.Event("keydown");
				press.ctrlKey = true;
				press.which = 13;

				bDoc = bDoc + String.fromCharCode(press.which) + "$";

				$("#Amounts").val(bDoc);
			}
		})

		firstReadingPicker = $('#FirstReading').pickadate({
			labelMonthNext: 'Go to the next month',
			labelMonthPrev: 'Go to the previous month',
			labelMonthSelect: 'Pick a month from the dropdown',
			labelYearSelect: 'Pick a year from the dropdown',
			format: 'mm/dd/yyyy',
			formatSubmit: 'mm/dd/yyyy',
			selectMonths: true,
			selectYears: true
		});

		finalReadingPicker = $('#FinalReading').pickadate({
			labelMonthNext: 'Go to the next month',
			labelMonthPrev: 'Go to the previous month',
			labelMonthSelect: 'Pick a month from the dropdown',
			labelYearSelect: 'Pick a year from the dropdown',
			format: 'mm/dd/yyyy',
			formatSubmit: 'mm/dd/yyyy',
			selectMonths: true,
			selectYears: true
		});

		firstReadingPickerClose = firstReadingPicker.pickadate('picker');
		finalReadingPickerClose = finalReadingPicker.pickadate('picker');
	})

	firstReadingPickerClose.on('close', function () {

	})

	finalReadingPickerClose.on('close', function () {

	})

	function requireFields() {
		var inputChk = $('input')
		var textareaChk = $('textarea')
		$(inputChk).each(function (ind, val) {
			var input = $(val).attr('required')
			if (typeof input !== typeof undefined && input !== false) {
				$(val).after('<span style="color: red;">*</span>')
			}
		})
		$(textareaChk).each(function (ind, val) {
			var input = $(val).attr('required')
			if (typeof input !== typeof undefined && input !== false) {
				$(val).after('<span style="color: red;">*</span>')
			}
		})
	}

	function AddOrdinance() {
		if ($("#IncludeOrdinance").is(':checked')) {
			$("#ordinanceSection").find('input').each(function () {
				$(this).prop('required', true);
			})

			$("#ordinanceSection").find('textarea').each(function () {
				$(this).prop('required', true);
			})

			$("#ordinanceSection").find('select').each(function () {
				$(this).prop('required', true);
			})

			$('#ordinanceSection').show();

			$("#FormHtml").prepend('<input type="hidden" name="Document2.DocumentType" id="Document2.DocumentType" value="3" />');
			$("#FormHtml").prepend('<input type="hidden" name="Document2.name" id="Document2.name" value="Bid Proposal - Ordinance" />');
			$("#FormHtml").prepend('<input type="hidden" data-parent="ProjectVendorName" name="Document2.ProjectVendorName1" id="Document2.ProjectVendorName1" />');
			$("#FormHtml").prepend('<input type="hidden" data-parent="ProjectVendorName" name="Document2.ProjectVendorName2" id="Document2.ProjectVendorName2" />');
			$("#FormHtml").prepend('<input type="hidden" data-parent="ProjectVendorName" name="Document2.ProjectVendorName3" id="Document2.ProjectVendorName3" />');
			$("#FormHtml").prepend('<input type="hidden" data-parent="ProjectName" name="Document2.ProjectName1" id="Document2.ProjectName1" />');
			$("#FormHtml").prepend('<input type="hidden" data-parent="ProjectName" name="Document2.ProjectName2" id="Document2.ProjectName2" />');
			$("#FormHtml").prepend('<input type="hidden" data-parent="ProjectName" name="Document2.ProjectName3" id="Document2.ProjectName3" />');
		}
		else {
			$("#ordinanceSection").find('input').each(function () {
				$(this).prop('required', false);

				$(this).val("");
			})

			$("#ordinanceSection").find('textarea').each(function () {
				$(this).prop('required', false);

				$(this).val("");
			})

			$("#ordinanceSection").find('select').each(function () {
				$(this).prop('required', false);

				$(this).val("");
			})

			$('[name^="Document"]').remove();

			$('#ordinanceSection').hide();
		}
	}
	/**
	* formatNumber = formats a input field to be a number
	* params
	*	value = the input value - REQUIRED
	*	id = the input id - REQUIRED
	* calls = commaSeparateNumber(number)
	* usage onchange="formatNumber(this.value, this.id)"
	*/
	function formatNumber(value, id) {
		var amount = value,
			newAmount,
			dollarSign,
			decimal,
			isNumber;

		//ensure it's a number
		numberCheck = /^[0-9,.$]*$/;
		isNumber = numberCheck.test(amount);
		if (isNumber) {
			dollarSign = amount.split("$");
			// make it a number with the $ dollar sign
			if (dollarSign.length != 2) {
				amount = "$" + amount;
			}

			//		
			decimal = amount.split(".");
			//console.log(decimal)
			//console.log('decimal.length is ' + decimal.length)
			// make it a number with the $ dollar sign
			if (decimal.length == 1) {
				amount = amount + ".00";
			} else if (decimal[1].length == 1) {
				amount = amount + '0';
			} else {
				amount = amount
			}

			//add applicable commas
			newAmount = commaSeparateNumber(amount)

			$('#' + id).val(newAmount)

			//$('#Amount').val(newAmount)
		} else {
			alert("Please enter a number")
		}
	}

	/**
	* commaSeparateNumber = formats a number with appropriate commas. 
		takes decimals into account
	* params
	*	val = the number you want to format - REQUIRED
	*/
	function commaSeparateNumber(val) {
		val = val.toString().replace(/,/g, ''); //remove existing commas first
		var valSplit = val.split('.'); //then separate decimals

		while (/(\d+)(\d{3})/.test(valSplit[0].toString())) {
			valSplit[0] = valSplit[0].toString().replace(/(\d+)(\d{3})/, '$1' + ',' + '$2');
		}

		if (valSplit.length == 2) { //if there were decimals
			val = valSplit[0] + "." + valSplit[1]; //add decimals back
		} else {
			val = valSplit[0];
		}

		return val;
	}




	function displayUsersSelect(userElement) {
		var display;
		var users = getAllUsers().done(function (data) {
			$(data).each(function (ind, val) {
				var fullName = val.firstName + " " + val.lastName;
				var accountName = $('#OriginatorName').val();
				if (!accountName == undefined) {
					if (fullName == accountName) {
						display += "<option value='" + fullName + "' selected='selected'>" + fullName + "</option>";
					} else {
						display += "<option value='" + fullName + "'>" + fullName + "</option>";
					}
				} else {
					display += "<option value='" + fullName + "'>" + fullName + "</option>";
				}
			})
			$('#' + userElement).append(display)
		});
	}

	function getAllUsers() {
		var url = window.location.protocol + "//" + window.location.host + "/";
		return $.getJSON(url + 'api/User/list', function (d) {
		})
	}

	$('[data-toggle="popover"]').each(function () {
		var $pop = $(this);
		$pop.popover({
			html: true,
			trigger: "hover",
			title: $pop.attr('data-title'),
			content: $pop.attr('data.content'),
			container: $pop,
			animation: false
		})
	})

	function populateDept() {
		var url = window.location.protocol + "//" + window.location.host + "/";

		$.ajax({
			type: "Get",
			url: url + "api/user/list",
			datatype: "json",
			success: function (data) {
				$.each(data, function (index, element) {
					//alert(element.id);

					if (element.id == $("#OriginatorId").val()) {
						getDept(element.departmentId);

						populateDeptDivHeads();
					}
				})
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				//alert("Error Occurred getting populateDept: " + errorThrown);
			}
		})
	}

	function getDept(id) {
		var deptName;
		var url = window.location.protocol + "//" + window.location.host + "/";

		$.ajax({
			type: "Get",
			url: url + "api/department/list",
			datatype: "json",
			success: function (data) {
				$("#InitiatedBy").empty();
				$("#InitiatedBy").append('<option value=""></option>')

				$.each(data, function (index, element) {
					if (element.id == id) {
						$("#InitiatedBy").append('<option value="' + element.id + '" selected="selected">' + element.name + '</option>')

						$("#DeptNameHolder").val(element.name);
						$("#DeptIdHolder").val(element.id);
					}
					else {
						$("#InitiatedBy").append('<option value="' + element.id + '">' + element.name + '</option>')
					}
				})
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				//alert("Error Occurred getting System Item Types: " + errorThrown);
			}
		})
	}

	function populateDeptDivHeads() {
		$("#DeptNameHolder").val($("#InitiatedBy option:selected").text());
		$("#DeptIdHolder").val($("#InitiatedBy option:selected").val());

		var url = window.location.protocol + "//" + window.location.host + "/";

		$.ajax({
			type: "Get",
			url: url + "api/userGroup/list",
			datatype: "json",
			success: function (data) {
				$.each(data, function (index, element) {
					if (element.name == $("#DeptNameHolder").val() + "_DH") {
						$("#DeptHeadId").val(element.id);
					}
					else if (element.name == $("#Department").val() + "_DivHead") {
						$("#DivHeadId").val(element.id);
					}
				})

				populateAuthor();
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				//alert("Error Occurred getting System Item Types: " + errorThrown);
			}
		})
	}

	function populateAuthor() {
		var url = window.location.protocol + "//" + window.location.host + "/";

		$.ajax({
			type: "Get",
			url: url + "api/user/list",
			datatype: "json",
			success: function (data) {
				$.each(data, function (index, ele) {
					if (ele.id == $("#OriginatorId").val()) {
						$("#Author").val(ele.firstName + " " + ele.lastName + ", " + ele.position);
					}
				})
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				//alert("Error Occurred getting System Item Types: " + errorThrown);
			}
		})
	}

	function setMeetingDate(sel) {
		$("#MeetingDate").val(sel.options[sel.selectedIndex].text);
		$("#MeetingDateDisplay").val(moment($("#MeetingDate").val().format('LL')));
	}

	function updateFinImpactHtml() {
		var val = $("#FinancialImpact option:selected").val();

		if (val == "No impact/Not applicable") {
			$("#NoImpact").val("X");
			$("#CurrentYear").val("");
			$("#Other").val("");
		}
		else if (val == "Budgeted in the current year's budget") {
			$("#NoImpact").val("");
			$("#CurrentYear").val("X");
			$("#Other").val("");
		}
		else if (val == "Other (See additional explanation)") {
			$("#NoImpact").val("");
			$("#CurrentYear").val("");
			$("#Other").val("X");
		}
	}

	function updateStaffRecHtml() {
		var val = $("#StaffRecommendation option:selected").val();

		if (val == "Recommended") {
			$("#Recommended").val("X");
			$("#NotRecommended").val("");
			$("#NeutralNone").val("");
		}
		else if (val == "Not Recommended") {
			$("#Recommended").val("");
			$("#NotRecommended").val("X");
			$("#NeutralNone").val("");
		}
		else if (val == "Neutral/None") {
			$("#Recommended").val("");
			$("#NotRecommended").val("");
			$("#NeutralNone").val("X");
		}
	}

	function populateOrdinanceInfo(id) {
		if (id != "ProjectAmount" && id != "Amount") {
			$("[data-parent=" + id + "]").each(function () {
				$(this).val($("#" + id).val());
			})
		}
		else {
			var removeDollarSign = $("#" + id).val();
			removeDollarSign = removeDollarSign.replace("$", "");

			if (removeDollarSign.toString().indexOf(",") >= 0 && removeDollarSign.toString().indexOf(".") >= 0) {
				removeDollarSign = removeDollarSign.replace(/[^0-9\.]/g, '');
			}
			if (removeDollarSign.toString().indexOf(".") >= 0 && removeDollarSign.toString().indexOf(",") < 0) {
				removeDollarSign = +(removeDollarSign * 100);
			}
			else if (isNaN(removeDollarSign) || removeDollarSign == "") {
				removeDollarSign = parseFloat(0, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
				removeDollarSign = +(removeDollarSign * 100);
			}
			else {
				removeDollarSign = parseFloat(removeDollarSign, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();

				if (removeDollarSign.toString().indexOf(",") >= 0 && removeDollarSign.toString().indexOf(".") >= 0) {
					removeDollarSign = removeDollarSign.replace(/[^0-9\.]/g, '');
				}
				if (removeDollarSign.toString().indexOf(".") >= 0 && removeDollarSign.toString().indexOf(",") < 0) {
					removeDollarSign = +(removeDollarSign * 100);
				}
			}

			if (isNaN(removeDollarSign)) {
				$("#" + id).val("$" + parseFloat(0, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
			}
			else {
				$("#" + id).val("$" + parseFloat($("#" + id).val(), 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
			}
		}
	}

	function SelectAllText(id) {
		var currency = $("#" + id).val().replace("$", "");
		var newCurrency = "";

		if (currency.indexOf(",") >= 0 && currency.indexOf(".") >= 0) {
			newCurrency = (parseInt(currency.replace(/[^0-9\.]/g, '')));

			$("#" + id).val(newCurrency);
		}
		if (currency.indexOf(".") >= 0 && currency.indexOf(",") < 0) {
			newCurrency = +(currency * 100) / 100;

			$("#" + id).val(newCurrency);
		}

		if (isNaN(newCurrency) || newCurrency == "") {
			$("#" + id).val(0);
		}

		if (document.selection) {
			var range = document.body.createTextRange();
			range.moveToElementText(document.getElementById(id));
			range.select();
		}
		else if (window.getSelection) {
			var range = document.createRange();
			range.selectNodeContents(document.getElementById(id));
			window.getSelection().removeAllRanges();
			window.getSelection().addRange(range);
		}

		$("#" + id).select();
	}	
</script>

<style>
	.popover-content {
		width: max-content;
		max-width: 700px;
	}

	.popover {
		width: max-content;
		max-width: 700px;
	}
</style>

<body>
	<input type="hidden" name="MeetingDate" id="MeetingDate" />
	<input type="hidden" name="MeetingDateDisplay" id="MeetingDateDisplay" />
	<input type="hidden" name="DeptNameHolder" id="DeptNameHolder" />
	<input type="hidden" name="DeptIdHolder" id="DeptIdHolder" />
	<input type="hidden" name="DeptHeadId" id="DeptHeadId" />
	<input type="hidden" name="DivHeadId" id="DivHeadId" />
	<input type="hidden" name="FinImpact" id="FinImpact" />
	<input type="hidden" name="StaffRec" id="StaffRec" />
	<input type="hidden" name="NumberOfDocuments" id="NumberOfDocuments" value="2" />
	<input type="hidden" name="NoImpact" id="NoImpact" />
	<input type="hidden" name="CurrentYear" id="CurrentYear" />
	<input type="hidden" name="Other" id="Other" />
	<input type="hidden" name="Recommended" id="Recommended" />
	<input type="hidden" name="NotRecommended" id="NotRecommended" />
	<input type="hidden" name="NeutralNone" id="NeutralNone" />

	<legend>Meeting Information</legend>

	<div class="form-group  dataType" data-type="Meeting Select With Sections">
		<div class="row">
			<div class="col-md-12">
				<div class='form-group'>
					<label for="committeeSelect">Committee:</label>

					<span style="color: red;">*</span>

					<select id="committeeSelect" style="width: 500px;" required="true" name="committeeSelect"
						data-for="meetingTypes" data-field-hasvalue="false" data-field-values="committees"
						class="form-control "></select>
				</div>
			</div>
		</div>

		<br />

		<div class="row">
			<div class="col-md-12">
				<div class='form-group'>
					<label for="meetingTypeSelect">Meeting Type:</label>

					<span style="color: red;">*</span>

					<select id="meetingTypeSelect" style="width: 500px;" required="true" name="meetingTypeSelect"
						data-dependent-on="committeeSelect" data-field-hasvalue="false" data-field-values="meetingTypes"
						class="form-control "></select>
				</div>
			</div>
		</div>

		<br />

		<div class="row">
			<div class="col-md-12">
				<div class='form-group'>
					<label for="meetingDateSelect">Meeting Date:</label>

					<span style="color: red;">*</span>

					<select id="meetingDateSelect" style="width: 500px;" required="true" name="meetingDateSelect"
						data-dependent-on="meetingTypeSelect" onChange="setMeetingDate(this);"
						data-field-hasvalue="false" data-field-values="meetingDates" class="form-control "></select>
				</div>
			</div>
		</div>

		<br />

		<div class="row">
			<div class="col-md-12">
				<div class='form-group'>
					<label for="meetingSectionSelect">Meeting Section:</label>

					<span style="color: red;">*</span>

					<select id="meetingSectionSelect" style="width: 500px;" required="true" name="meetingSectionSelect"
						data-dependent-on="meetingDateSelect" data-field-hasvalue="false"
						data-field-values="meetingSections" class="form-control "></select>
				</div>
			</div>
		</div>

		<br />

		<div class="row">
			<div class="col-md-12">
				<div class='form-group'>
					<label for="ItemType">Item Type:</label>

					<span style="color: red;">*</span>

					<select id="ItemType" required="true" style="width: 500px;" name="ItemType" data-name="ItemType"
						class="form-control "></select>
				</div>
			</div>
		</div>
	</div>

	<br />
	<br />

	<legend>Bid Proposal</legend>

	<div class="row">
		<div class="col-sm-12 form-group">
			<label for="Subject">Item/Subject:</label>

			<textarea rows="5" cols="100" class="form-control" name="Subject" id="Subject"
				placeholder="Item/Subject"></textarea>
		</div>
	</div>

	<div class="row">
		<div class="col-sm-12 form-group">
			<label for="InitiatedBy">Initiated By:</label>

			<select id="InitiatedBy" style="width: 450px;" name="InitiatedBy" onchange="populateDeptDivHeads()"
				class="form-control"></select>
		</div>
	</div>

	<div class="row">
		<div>
			<div class="col-sm-12 form-group">
				<div style="display: inline-block; width: 45%;">
					<label for="FirstReading">First Reading:</label>

					<input type="text" style="width: 150px;" class="form-control datepicker" name="FirstReading"
						id="FirstReading" placeholder="FirstReading" />
				</div>

				<div style="display: inline-block; width: 45%;">
					<label for="FinalReading">Final Reading:</label>

					<input type="text" style="width: 150px;" class="form-control datepicker" name="FinalReading"
						id="FinalReading" placeholder="FinalReading" />
				</div>
			</div>
		</div>
	</div>

	<br />
	<br />

	<legend>Executive Summary</legend>

	<div class="row">
		<div class="col-sm-12 form-group ">
			<label>1.</label> This item from
			<input style="width: 225px;" type="text" name="VendorName" id="VendorName" placeholder="Vendor Name"
				Required>
			for
			<input style="width: 225px;" type="text" name="Project" id="Project" placeholder="Project" Required>
			in the amount not to exceed
			<input style="width: 175px;" type="text" name="Amount" id="Amount"
				onchange="formatNumber(this.value, this.id)" Required placeholder="$0.00">


			<br />
			<br />

			<span class="form-group" style="margin-left: 3%;">
				<label for="Reason">Reason For Purchase:</label>

				<br />

				<textarea style="margin-left: 5%;" rows="3" cols="100" name="Reason" id="Reason"
					placeholder="Description of item. Reason for purchase. If needed."></textarea>
			</span>
		</div>
	</div>

	<br />

	<div class="row">
		<div class="col-sm-12 form-group">
			<label for="BidDetails">2. Bid details:</label>

			<i data-toggle="popover" data-animation="true" data-html="true" data-trigger="hover"
				title="Bidder Instructions"
				data-content="- Number of bids received, list of bidders, amount of each bid who was awarded bid. If non-qualified bids are listed, denote the bid was not qualified and why<br>- If only one bid was received, list how many request for bids were sent out.<br>- Was it a state or cooperative bid etc.<br>- Reason: Example: low bid, if not low bid then include explanation as to why"
				class="glyphicon glyphicon-info-sign" aria-hidden="true"></i>

			<textarea rows="3" class="form-control" name="BidDetails" id="BidDetails"
				placeholder="Bid Details."></textarea>
		</div>
	</div>

	<br />

	<div class="row">
		<div class="col-sm-1">

		</div>
		<div class="col-sm-10">

			<table class="form-group " style="width:100%">
				<tr>
					<td style="text-align: left; ">
						<label for="Bidders">BIDDER</label>
					</td>
					<td>&emsp;</td>

					<td style="text-align: left; ">
						<label for="Amounts">AMOUNT</label>
					</td>
				</tr>
				<tr>
					<td style="text-align: left; width: 50%">
						<textarea name="Bidders" id="Bidders" rows="3" class="form-control"
							placeholder="List of Bidders."></textarea>
					</td>
					<td>&emsp;</td>

					<td style="text-align: left; width: 50%">
						<textarea name="Amounts" id="Amounts" rows="3" class="form-control"
							placeholder="Amounts."></textarea>
					</td>
				<tr>
			</table>
		</div>

		<div class="col-sm-1">

		</div>

	</div>

	<br />

	<div class="row">
		<div class="col-sm-12 form-group">
			<label for="AdditionalInformation">3. Additional Information:</label>

			<textarea class="form-control" name="AdditionalInformation" id="AdditionalInformation"
				placeholder="Provide any additional information not mentioned previously"></textarea>
		</div>
	</div>

	<div class="row">
		<div class="col-sm-12 form-group">
			<label>4.</label> Funds for this are budgeted in the <select class="form-control"
				style="width: 100px; display: inline;" name="BudgetYear" id="BudgetYear">
				<option value=""></option>
				<option value="current">current</option>
				<option value="next">next</option>
			</select> year's budget.
		</div>
	</div>

	<br />

	<br />
	<br />

	<legend>Additional Information</legend>

	<div class="row">
		<div class="col-sm-12">
			<table style="width: 100%;">
				<tr>
					<td style="width: 45%;">
						<div class="form-group">
							<label style="font-size: 14pt; text-decoration: underline; font-weight: bold;">FINANCIAL
								IMPACT:</label>
						</div>
					</td>

					<td style="width: 45%;">
						<div class="form-group">
							<label style="font-size: 14pt; text-decoration: underline; font-weight: bold;">STAFF
								RECOMMENDATION:</label>
						</div>
					</td>
				</tr>
				<tr>
					<td style="width: 45%;">
						<div class="form-group">
							<select onchange="updateFinImpactHtml()" class="form-control" style="width: 400px;"
								name="FinancialImpact" id="FinancialImpact">
								<option value=""></option>
								<option value="No impact/Not applicable">No impact/Not applicable</option>
								<option value="Budgeted in the current year's budget">Budgeted in the current year's
									budget</option>
								<option value="Other (See additional explanation)">Other (See additional explanation)
								</option>
							</select>
						</div>
					</td>

					<td style="width: 45%;">
						<div class="form-group">
							<select onchange="updateStaffRecHtml()" class="form-control" style="width: 400px;"
								name="StaffRecommendation" id="StaffRecommendation">
								<option value=""></option>
								<option value="Recommended">Recommended</option>
								<option value="Not Recommended">Not Recommended</option>
								<option value="Neutral/None">Neutral/None</option>
							</select>
						</div>
					</td>
				</tr>
			</table>
		</div>
	</div>

	<br />

	<div class="row">
		<div class="col-sm-12 form-group">
			<label for="CommunityPlan">Community Plan 2030:</label>

			<select style="width: 500px" name="CommunityPlan" id="CommunityPlan" class="form-control">
				<option>Form indicated list will be provided later</option>
			</select>
		</div>
	</div>

	<br />

	<div class="row">
		<div class="col-sm-12 form-group">
			<label for="AttachedExhibits">Attached Exhibits:</label>

			<textarea rows="3" cols="100" class="form-control" name="AttachedExhibits" id="AttachedExhibits"
				placeholder="Attached Exhibits"></textarea>
		</div>
	</div>

	<br />

	<div class="row">
		<div class="col-sm-12 form-group">
			<label for="DetailedAnalysis">Detailed Analysis:</label>

			<textarea rows="3" class="form-control" name="DetailedAnalysis" id="DetailedAnalysis"
				placeholder="Required if 'other' is chosen on Financial Impact"></textarea>
		</div>
	</div>

	<br />
	<br />

	<legend>bid proposal </legend>

	<div class="row">
		<div class="col-sm-12 form-group">
			<input type="checkbox" id="IncludeOrdinance" name="IncludeOrdinance" onchange="AddOrdinance(this.id)"><label
				style="margin-left: 5px;" for="IncludeOrdinance">Include <i>(or create)</i> an
				ordinance?</label></input>
		</div>
	</div>

	<div class="row" id="ordinanceSection">
		<div class="col-sm-12 form-group">
			<label for="VendorName">Vendor:</label>

			<span style="color: red;">*</span>

			<input type="text" onblur="populateOrdinanceInfo(this.id)" class="form-control" style="width: 275px;"
				id="ProjectVendorName" name="ProjectVendorName" placeholder="Vendor">
		</div>

		<div class="col-sm-12 form-group">
			<label for="ProjectName">Project:</label>

			<span style="color: red;">*</span>

			<input type="text" onblur="populateOrdinanceInfo(this.id)" class="form-control" style="width: 275px;"
				id="ProjectName" name="ProjectName" placeholder="Project">
		</div>

		<div class="col-sm-12 form-group">
			<label for="ProjectAmount">Project Amount:</label>

			<span style="color: red;">*</span>

			<input type="text" onblur="populateOrdinanceInfo(this.id)" onfocus="SelectAllText(this.id);"
				class="form-control" style="width: 175px;" id="ProjectAmount" name="ProjectAmount" placeholder="$0.00">
		</div>
	</div>
</body>