<style>
	.popover-content {
		width: max-content;
		max-width: 700px;
	}

	.popover {
		width: max-content;
		max-width: 700px;
	}

	.1 {
		counter-reset: item;
	}

	.2 {
		counter-increment: item;
	}

	.3 {
		counter-increment: item;
	}
</style>
<input type="hidden" name="MeetingDate" id="MeetingDate" />
<input type="hidden" name="MeetingDateDisplay" id="MeetingDateDisplay" />
<input type="hidden" name="DeptNameHolder" id="DeptNameHolder" />
<input type="hidden" name="DeptIdHolder" id="DeptIdHolder" />
<input type="hidden" name="DeptHeadId" id="DeptHeadId" />
<input type="hidden" name="DivHeadId" id="DivHeadId" />
<input type="hidden" name="Document1.DocumentType" id="Document1.DocumentType" value="8" />
<input type="hidden" name="Document1.DocumentName" id="Document1.DocumentName" value="CAR Communication Staff Report">

<legend>Meeting Information</legend>

<div class="form-group  dataType" data-type="Meeting Select With Sections">
	<div class="row">
		<label class="col-md-3 control-label col-centered" for="committeeSelect">Committee:</label>
	</div>

	<div class="row">
		<div class="col-md-6">
			<select id="committeeSelect" name="committeeSelect" class="form-control " disabled>
				<option value="1">City Council</option>
			</select>
		</div>
	</div>
</div>

<div class="row">
	<label class="col-md-3 control-label" for="meetingTypeSelect">Meeting Type:</label>
</div>

<div class="row">
	<div class="col-md-6">
		<select id="meetingTypeSelect" name="meetingTypeSelect" class="form-control" data-dependent-on="committeeSelect"
			data-field-hasvalue="false" data-field-values="meetingTypes" onchange="prepMeeting(this.id)">
			<option value="0">Select Meeting Type</option>
			<option value="1">City Council Regular Meeting</option>
		</select>
	</div>
</div>

<br />

<div class="row">
	<label class="col-md-3 control-label" for="meetingDateSelect">Meeting Date:</label>
</div>

<div class="row">
	<div class="col-md-6">
		<select id="meetingDateSelect" name="meetingDateSelect" data-dependent-on="meetingTypeSelect"
			onChange="setMeetingDate(this);" data-field-hasvalue="false" data-field-values="meetingDates"
			class="form-control "></select>
	</div>
</div>

<br />

<div class="row">
	<label class="col-md-3 control-label" for="meetingSectionSelect">Meeting Section:</label>
</div>

<div class="row">
	<div class="col-md-6">
		<select id="meetingSectionSelect" name="meetingSectionSelect" data-dependent-on="meetingDateSelect"
			data-field-hasvalue="false" data-field-values="meetingSections" class="form-control "></select>
	</div>
</div>

<br />

<div class="row">
	<label class="col-md-3 control-label" for="ItemType">Item Type:</label>
</div>

<div class="row">
	<div class="col-md-6">
		<select id="ItemType" name="ItemType1" data-name="ItemType1" class="form-control ">
			<option>Select Item</option>
			<option value="6">Communication</option>
		</select>
	</div>
</div>
<br />
<br />
<legend>Communication Item(s)</legend>
<div class="row">
	<!--Requester/Department-->
	<div class="col-sm-2 form-group">
		<label for="RequesterAndDepartment">Requester/Title:</label>
	</div>
	<div class="col-sm-10 form-group">
		<input type="text" class="form-control" name="RequesterAndDepartment" id="RequesterAndDepartment">
	</div>
</div>
<div class="row">
	<!--Presenter-->
	<div class="col-sm-2 form-group">
		<label for="Presenter">Presenter:</label>
	</div>
	<div class="col-sm-10 form-group">
		<input type="text" class="form-control" name="Presenter" id="Presenter" placeholder="Presenter">
	</div>
</div>
<div class="row">

	<!--Title-->
	<div class="col-sm-2 form-group">
		<label for="Title">Subject:</label>
	</div>
	<div class="col-sm-10 form-group">
		<input type="text" class="form-control" name="Title" id="Title" placeholder="This will appear on the agenda">
	</div>
</div>
<div class="row">

	<!--Slide Presentation-->
	<div class="col-sm-2 form-group">
		<label for="SlidePresentation">Slide Presentation<span style="color: red;">*</span></label>
	</div>
	<div class="col-sm-10 form-group">
		<div class='form-group'>
			<input id="SlidePresentationY" type="checkbox" class="SlidePresentation" name="SlidePresentation"
				value="Yes"> Yes
			<input id="SlidePresentationN" type="checkbox" class="SlidePresentation" name="SlidePresentation"
				value="No"> No
		</div>
	</div>
</div>
<div class="row">

	<!--Description-->
	<div class="col-sm-2 form-group">
		<label for="Description">Description:</label>
	</div>
	<div class="col-sm-10 form-group">
		<textarea class="form-control" name="Description" id="Description" placeholder="Description"></textarea>
	</div>

</div>



<script>
	$(document).ready(function () {
		$("#ROW_Presenter").hide();
		$("#ROW_CEQAVals").hide();
		$("#ROW_EnvironmentalDetermination").hide();
		$("textarea").attr('rows', '5');
		$('[data-toggle="tooltip"]').tooltip();

		populateDept();
		populateAuthor()
	})


	function prepMeeting(id) {
		var meetingTypeId = $('#meetingTypeSelect').val();
		console.log(meetingTypeId)

		loadMeetingDates(meetingTypeId, 'meetingTypeSelect')
	}

	function loadMeetingDates(meetingTypeId, meetingTypeSelectId) {
		if (meetingTypeId === "0") return;
		$("#meetingDateSelect").html('')
		$("#meetingDateSelect").append($("<option></option>").val(0).html("Select Meeting Date"));

		$.getJSON(ROOT + "api/meeting/listupcomingbymeetingtype/?meetingTypeId=" + meetingTypeId, null, function (data) {
			if (data.length > 0) {
				$.each(data, function (index, meeting) {
					var date = new Date(meeting.scheduledEvent.start);

					$("#meetingDateSelect").append($("<option></option>").val(meeting.id).data("title", meeting.title).html((date.getMonth() + 1) + "/" + date.getDate() + "/" + date.getFullYear()));
				});
			}
			else {
				$("#meetingDateSelect").append($("<option></option>").val("").html("No upcoming meetings"));
			}
		})
	}
	function loadMeetingSections(meetingId, meetingDataSelectId) {
		if (meetingId === "0") return;

		$.getJSON(ROOT + "api/meetingsectiontemplate/list/?meetingId=" + meetingId, null, function (data) {

			$("#meetingSectionSelect").find("option").remove();
			$("#meetingSectionSelect").append($('<option></option>').val(0).html("Select Section"));

			$.each(data, function (index, section) {

				$("#meetingSectionSelect").append($("<option></option>").val(section.meetingSectionId).html(section.name));

			});
		})
	}

	$('[data-toggle="popover"]').each(function () {
		var $pop = $(this);
		$pop.popover({
			html: true,
			trigger: "hover",
			title: $pop.attr('data-title'),
			content: $pop.attr('data.content'),
			container: $pop,
			animation: false
		})
	})

	function populateDept() {
		var url = window.location.protocol + "//" + window.location.host + "/";

		$.ajax({
			type: "Get",
			url: url + "api/user/list",
			datatype: "json",
			success: function (data) {
				$.each(data, function (index, element) {
					//alert(element.id);

					if (element.id == $("#OriginatorId").val()) {
						getDept(element.departmentId);

						populateDeptDivHeads();
					}
				})
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				alert("Error Occurred getting populateDept: " + errorThrown);
			}
		})
	}

	function getDept(id) {
		var deptName;
		var url = window.location.protocol + "//" + window.location.host + "/";

		$.ajax({
			type: "Get",
			url: url + "api/department/list",
			datatype: "json",
			success: function (data) {
				$.each(data, function (index, element) {
					if (element.id == id) {
						$("#Department").append('<option value="' + element.id + '" selected="selected">' + element.name + '</option>')

						$("#DeptNameHolder").val(element.name);
						$("#DeptIdHolder").val(element.id);
					}
					else {
						$("#Department").append('<option value="' + element.id + '">' + element.name + '</option>')
					}
				})
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				alert("Error Occurred getting System Item Types: " + errorThrown);
			}
		})
	}

	function populateDeptDivHeads() {
		var url = window.location.protocol + "//" + window.location.host + "/";

		$.ajax({
			type: "Get",
			url: url + "api/userGroup/list",
			datatype: "json",
			success: function (data) {
				$.each(data, function (index, element) {
					if (element.name == $("#Department").val() + "_DH") {
						$("#DeptHeadId").val(element.id);
					}
					else if (element.name == $("#Department").val() + "_DivHead") {
						$("#DivHeadId").val(element.id);
					}
				})

				populateAuthor();
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				alert("Error Occurred getting System Item Types: " + errorThrown);
			}
		})
	}

	function populateAuthor() {
		var url = window.location.protocol + "//" + window.location.host + "/";

		$.ajax({
			type: "Get",
			url: url + "api/user/list",
			datatype: "json",
			success: function (data) {
				$.each(data, function (index, ele) {
					if (ele.id == $("#OriginatorId").val()) {
						if (ele.position == "") {
							$("#RequesterAndDepartment").val(ele.firstName + " " + ele.lastName);

						} else {
							$("#RequesterAndDepartment").val(ele.firstName + " " + ele.lastName + ", " + ele.position);

						}
					}
				})
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				alert("Error Occurred getting System Item Types: " + errorThrown);
			}
		})
	}

	function setMeetingDate(sel) {
		$("#MeetingDate").val(sel.options[sel.selectedIndex].text);
		$("#MeetingDateDisplay").val(moment($("#MeetingDate").val().format('LL')));
		var value = $('#meetingDateSelect').val();
		loadMeetingSections(value, 'meetingDateSelect')

	}

	function showPresenterField() {
		if ($("#ItemType option:selected").text() !== "Consent Calendar" && $("#ItemType option:selected").text() !== "") {
			$("#ROW_Presenter").show();
		}
		else if ($("#ItemType option:selected").text() == "" || $("#ItemType option:selected").text() == null) {
			$("#ROW_Presenter").hide();
		}
		else {
			$("#ROW_Presenter").hide();
		}

		if ($("#ItemType option:selected").text() == "CONTRACT") {
			$("#Recommendation").val('Award a contract to (company name) for (project or job name) in the amount of $______ and authorize (title of person) to execute the contract in substantially the form presented.\nOptional text: "establish a contingency fund in the amount of $____ and authorize the (title of person) to execute amendments/change orders within that amount."\n\nApprove Amendment No. ___ to the contract with (company name) for the purpose of _________ in the amount of $______ for a new contract total of $______.')
		}
		else if ($("#ItemType option:selected").text() == "AGREEMENT") {
			$("#Recommendation").val('Approve an agreement to (company name) for (project or job name) in the amount of $______ and authorize (title of person) to execute the agreement in substantially the form presented.\nOptional text: "establish a contingency fund in the amount of $____ and authorize the (title of person) to execute amendments/change orders within that amount."\n\nApprove Amendment No. ___ to the agreement with (company name) for the purpose of _________ in the amount of $______ for a new contract total of $______.')
		}
		else if ($("#ItemType option:selected").text() == "RESOLUTION") {
			$("#Recommendation").val('Adopt a Resolution to use an alternative purchasing method to\n\nAdopt a Resolution to')
		}
		else if ($("#ItemType option:selected").text() == "ORDINANCE") {
			$("#Recommendation").val("Introduce an Ordinance to\n\nAdopt an Ordinance to")
		}
		else {
			$("#Recommendation").val("")
		}
	}

	function ceqaReview() {
		if ($("#CEQAReview").is(':checked')) {
			$("#ROW_CEQAVals").show();
			$("#ROW_EnvironmentalDetermination").show();
		}
		else {
			$("#ROW_CEQAVals").hide();
			$("#CEQAPublicResource").prop('checked', false);
			$("#CEQAGuidline15301").prop('checked', false);
			$("#CEQAGuidline15378B4").prop('checked', false);
			$("#CEQAGuidline15378B5").prop('checked', false);

			$("#ROW_EnvironmentalDetermination").hide();
			$("#EnvironmentalDetermination").val("");
		}
	}

	function updateEnvironmentalDetermination(id) {
		if ($("#" + id).is(':checked')) {
			$('[data-name="ceqavals"]').each(function () {
				if (this.id !== id) {
					$(this).prop('checked', false);
				}
			})

			$("#EnvironmentalDetermination").val($('label[for="' + id + '"]').text());
		}
		else {
			$("#EnvironmentalDetermination").val("");
		}
	}
</script>